<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杰峰的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="wang-jie-feng.github.io/"/>
  <updated>2019-10-27T03:00:27.807Z</updated>
  <id>wang-jie-feng.github.io/</id>
  
  <author>
    <name>王杰峰</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nginx安装笔记</title>
    <link href="wang-jie-feng.github.io/2019/10/27/nginx/"/>
    <id>wang-jie-feng.github.io/2019/10/27/nginx/</id>
    <published>2019-10-26T19:20:26.202Z</published>
    <updated>2019-10-27T03:00:27.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h2><a id="more"></a><ol><li>cent<ol><li><code>yum install -y make cmake gcc gcc-c++</code></li><li><code>yum install -y pcre pcre-devel</code></li><li><code>yum install -y zlib zlib-devel</code></li><li><code>yum install -y openssl openssl-devel</code></li></ol></li><li>ubuntu<ol><li><code>sudo apt-get install build-essential</code></li><li><code>sudo apt-get install libtool</code></li><li><code>sudo apt-get install libpcre3 libpcre3-dev</code></li><li><code>sudo apt-get install zlib1g-dev</code></li><li><code>sudo apt-get install openssl</code> (默认已经安装了)</li></ol></li></ol><h2 id="通过源码安装"><a href="#通过源码安装" class="headerlink" title="通过源码安装"></a>通过源码安装</h2><ol><li>解压<ol><li><code>tar -xzvf nginxFileName -C /usr/local/nginx</code>(先创建一个nginx目录用于安装nginx)</li></ol></li><li>配置<ol><li><code>./configure --prefix=/usr/local/nginx</code></li></ol></li><li>编译<ol><li><code>make</code></li></ol></li><li>安装<ol><li><code>make install</code></li></ol></li><li>启动<ol><li><code>sudo /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</code></li><li>此处需要制定配置文件目录，不然会从默认配置文件路径读取配置</li></ol></li></ol><h2 id="通过包管理工具安装"><a href="#通过包管理工具安装" class="headerlink" title="通过包管理工具安装"></a>通过包管理工具安装</h2><ol><li>ubuntu<ol><li><code>sudo apt-get install nginx</code></li><li>通过此方式安装的软件，配置文件都在 <code>/etc/nginx</code>目录下面</li></ol></li><li>centOs<ol><li>添加<code>yum</code>源 <code>sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</code></li><li>安装nginx <code>sudo yum install -y nginx</code></li><li>启动nginx <code>sudo systemctl start nginx.service</code></li><li>设置开机启动<code>sudo systemctl enable nginx.service</code></li></ol></li></ol><h2 id="nginx目录结构"><a href="#nginx目录结构" class="headerlink" title="nginx目录结构"></a>nginx目录结构</h2><ol><li>网站文件默认存放目录<ol><li><code>/usr/share/nginx/html</code></li></ol></li><li>网站默认站点配置<ol><li><code>/etc/nginx/conf.d/default.conf</code></li></ol></li><li>自定义Nginx站点配置文件存放目录<ol><li><code>/etc/nginx/conf.d/</code></li></ol></li><li>nginx全局配置<ol><li><code>/etc/nginx/nginx.conf</code></li></ol></li><li>nginx启动<ol><li><code>nginx -c nginx.conf</code></li></ol></li></ol><h2 id="配置反向代理端口，做负载均衡"><a href="#配置反向代理端口，做负载均衡" class="headerlink" title="配置反向代理端口，做负载均衡"></a>配置反向代理端口，做负载均衡</h2><ol><li><p>配置两个tomcat，分别使用不同的端口</p></li><li><p>配置nginx配置文件使其代理tomcat</p><ol><li><pre><code>upstream localhost{      #Nginx是如何实现负载均衡的，Nginx的upstream目前支持以下几种方式的分配    #1、轮询（默认）    #每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。    #2、weight    #指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。    #2、ip_hash    #每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。    #3、fair（第三方）    #按后端服务器的响应时间来分配请求，响应时间短的优先分配。    #4、url_hash（第三方）    #按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。        #ip_hash;       server localhost:8080;        server localhost:8088;}<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2.</span><br></pre></td></tr></table></figure>server {              listen       80;              server_name  localhost;                 location / {                     proxy_connect_timeout 3; #nginx跟后端服务器连接超时时间(代理连接超时)                    proxy_send_timeout 30; #后端服务器数据回传时间(代理发送超时)                    proxy_read_timeout 30; #连接成功后，后端服务器响应时间(代理接收超时)                    proxy_pass http://localhost;}</code></pre></li></ol></li><li><p>启动nginx</p><p><code>nginx -ct /usr/local/nginx/nginx1.8/conf/nginx.conf</code></p></li><li><p>访问<code>localhost</code>,可以观察到负载均衡 </p></li></ol>]]></content>
    
    <summary type="html">
    
      nginx安装笔记
    
    </summary>
    
    
      <category term="nginx" scheme="wang-jie-feng.github.io/categories/nginx/"/>
    
    
      <category term="nginx" scheme="wang-jie-feng.github.io/tags/nginx/"/>
    
      <category term="笔记" scheme="wang-jie-feng.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>linuxQQ发布</title>
    <link href="wang-jie-feng.github.io/2019/10/27/linuxqq/"/>
    <id>wang-jie-feng.github.io/2019/10/27/linuxqq/</id>
    <published>2019-10-26T19:20:26.199Z</published>
    <updated>2019-10-27T03:00:10.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前文"><a href="#前文" class="headerlink" title="前文"></a>前文</h1><p>时光匆匆，随着时间流逝，已经来到了2019年，在这一年的1024程序员节这天，腾讯终于又发布了linux版的qq，说起来也是喜大普奔，作为一个程序员的我，当然马上要尝鲜一下了，接下来看一下如何安装的。</p><a id="more"></a>    <p>此次linux版的QQ分为数个版本，分别支持 <code>x64</code>，<code>ARM64</code>，<code>MIPS64</code>,三种架构，如下</p><table><thead><tr><th>架构</th><th>可支持格式</th></tr></thead><tbody><tr><td>x64</td><td>shell rpm deb pacman</td></tr><tr><td>ARM64</td><td>shell rpm deb</td></tr><tr><td>MIPS64</td><td>shell rpm</td></tr><tr><td>## 安装</td><td></td></tr></tbody></table><p>接下来看版本选择，官方提供了表格可以对照使用</p><table><thead><tr><th>后缀名</th><th>安装包管理器</th><th>支持发行版</th></tr></thead><tbody><tr><td>.rpm</td><td>rpm/yum</td><td>红帽系（如redhat、fedora、centos）</td></tr><tr><td>.deb</td><td>dpkg/apt</td><td>debian系（如debian、ubuntu、银河麒麟）</td></tr><tr><td>.pkg.tar.xz</td><td>pacman</td><td>arch系（如Arch Linux、manjaro）</td></tr><tr><td>.sh</td><td>bash</td><td>任意支持bash的发行版</td></tr></tbody></table><p>目前我使用的还是<code>ubuntu 16.04</code>，所以当然是选择使用<code>x64 deb</code>的安装方式来安装比较方便，下载完成之后</p><p>使用<code>sudo dpkg -i linuxqq_2.0.0-b1-1024_amd64.deb</code></p><p>执行完成之后即可使用，不过要吐槽的一点是目前linux版本的QQ和微信一样，也是必须使用扫码登陆，说实话还是非常不方便的，实际使用中，发现是不可以与pc版QQ可以一起登陆的。</p><h2 id="后文"><a href="#后文" class="headerlink" title="后文"></a>后文</h2><p>当然我也尝试了一下使用shell版本安装</p><p>首先使用 <code>sudo sh linuxqq_2.0.0-b1-1024_x86_64.sh</code></p><p>执行之后会在<code>/usr/share/</code>下建立一个<code>tencent-qq</code>的文件夹，切换进去之后执行<code>qq</code>文件即可，也可以将其加一个桌面快捷方式，可以更方便</p>]]></content>
    
    <summary type="html">
    
      linuxQQ安装
    
    </summary>
    
    
      <category term="linux" scheme="wang-jie-feng.github.io/categories/linux/"/>
    
    
      <category term="Linux" scheme="wang-jie-feng.github.io/tags/Linux/"/>
    
      <category term="qq" scheme="wang-jie-feng.github.io/tags/qq/"/>
    
  </entry>
  
</feed>
